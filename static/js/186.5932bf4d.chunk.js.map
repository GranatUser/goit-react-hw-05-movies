{"version":3,"file":"static/js/186.5932bf4d.chunk.js","mappings":"8VACaA,EAAqB,mCACrBC,EAAM,mEACnBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cADc,6NAGP,IAAMC,EAAwB,mCAAG,oGACbD,EAAAA,EAAAA,IAAU,uBADG,cAC9BE,EAD8B,yBAE7BA,EAASC,KAAKC,SAFe,2CAAH,qDAIxBC,EAAoB,mCAAG,WAAOC,GAAP,gFAC1BC,EAAiBD,EAAQE,cAAcC,OADb,SAETT,EAAAA,EAAAA,IAAU,gBAAiB,CAC9CU,OAAQ,CACJC,MAAOJ,KAJiB,cAE1BL,EAF0B,yBAOzBA,EAASC,KAAKC,SAPW,2CAAH,sDASpBQ,EAAiB,mCAAG,WAAOC,GAAP,uFACNb,EAAAA,EAAAA,IAAA,iBAAoBa,IADd,cACvBX,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAIjBW,EAAc,mCAAG,WAAOD,GAAP,uFACHb,EAAAA,EAAAA,IAAA,iBAAoBa,EAApB,aADG,cACpBX,EADoB,yBAEnBA,EAASC,KAAKY,MAFK,2CAAH,sDAIdC,EAAiB,mCAAG,WAAOH,GAAP,uFACNb,EAAAA,EAAAA,IAAA,iBAAoBa,EAApB,aADM,cACvBX,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qD,mDCT9B,IAhB2B,kBACzB,UAAC,KAAD,CACEa,MAAO,EACPC,MAAO,IACPC,OAAQ,IACRC,QAAQ,cACRC,gBAAgB,UAChBC,gBAAgB,UANlB,WASE,iBAAMC,EAAE,IAAIC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIR,MAAM,MAAMC,OAAO,SACpD,iBAAMI,EAAE,KAAKC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIR,MAAM,MAAMC,OAAO,QACtD,iBAAMI,EAAE,KAAKC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIR,MAAM,MAAMC,OAAO,UAZ/B,C,uJCCZ,SAASQ,IACpB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQrB,GAAOsB,EAAAA,EAAAA,MAAPtB,GAkBR,OAjBAuB,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAO,mCAAG,WAAOxB,GAAP,uFAERmB,GAAa,GAFL,UAGchB,EAAAA,EAAAA,IAAkBH,GAHhC,OAGFgB,EAHE,OAIRC,EAAWD,GAJH,gDAORK,GAAS,GAPD,yBAURF,GAAa,GAVL,4EAAH,sDAaZK,EAAQxB,EACZ,GAAE,CAACA,KAGA,gCACKoB,IAAQ,wDACRF,IAAW,SAAC,IAAD,IACO,IAAjBF,EAAQS,QAAeP,GAGzB,wBACSF,EAAQU,KAAI,SAACC,GAAD,OACb,2BACQ,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFVF,EAAO3B,GADH,OAHrB,iDAgBX,C","sources":["API/api.js","components/CastReviewSceleton/CastReviewSceleton.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\nexport const instancePathPoster = \"https://themoviedb.org/t/p/w1280\";\nexport const cap = \"https://netsh.pp.ua/wp-content/uploads/2017/08/Placeholder-1.png\"\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\nconst token = \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhYzViODgyYzJmYWZhYTc1M2EyYjFlNjFhZTMxYWZlMyIsInN1YiI6IjY0MThjMGNhNmEyMjI3MDBlOTc2NmYyOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.HpUKoGZIk3XOJnE1mgAPzzSJnPYgOT4_k3_XM1sQUtc\"\naxios.defaults.headers.common[\"Authorization\"] = token;\n\nexport const fetchMoviesTrendingOnDay = async () => {\n    const responce = await axios.get('/trending/movie/day')\n    return responce.data.results;\n}\nexport const fetchMovieByKeyWords = async (keyWord) => {\n    const currentKeyWord = keyWord.toLowerCase().trim();\n    const responce = await axios.get('/search/movie', {\n        params: {\n            query: currentKeyWord,\n        }\n    })\n    return responce.data.results;\n}\nexport const fetchMovieDatails = async (id) => {\n    const responce = await axios.get(`/movie/${id}`)\n    return responce.data;\n}\nexport const fetchMovieCast = async (id) => {\n    const responce = await axios.get(`/movie/${id}/credits`)\n    return responce.data.cast;\n}\nexport const fetchMovieReviews = async (id) => {\n    const responce = await axios.get(`/movie/${id}/reviews`)\n    return responce.data.results;\n}","import React from \"react\"\nimport ContentLoader from \"react-content-loader\"\n\nconst CastReviewSceleton = () => (\n  <ContentLoader \n    speed={2}\n    width={460}\n    height={460}\n    viewBox=\"0 0 460 460\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n\n  >\n    <rect x=\"6\" y=\"35\" rx=\"0\" ry=\"0\" width=\"140\" height=\"166\" /> \n    <rect x=\"10\" y=\"222\" rx=\"0\" ry=\"0\" width=\"363\" height=\"31\" /> \n    <rect x=\"10\" y=\"262\" rx=\"0\" ry=\"0\" width=\"363\" height=\"130\" />\n  </ContentLoader>\n)\n\nexport default CastReviewSceleton","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieReviews } from \"API/api\";\nimport CastReviewSceleton from \"../CastReviewSceleton/CastReviewSceleton\";\nexport default function Reviews() {\n    const [reviews, setReviews] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const { id } = useParams();\n    useEffect(() => {\n        const getCast = async (id) => {\n            try {\n                setIsLoading(true);\n                const reviews = await fetchMovieReviews(id);\n                setReviews(reviews);\n            }\n            catch {\n                setError(true);\n            }\n            finally {\n                setIsLoading(false);\n            }\n        }\n         getCast(id);\n    }, [id]);\n    \n    return (\n        <> \n            {error &&<p>Oops....Something went wrong</p>}\n            {isLoading&&<CastReviewSceleton></CastReviewSceleton>}\n            { reviews.length===0 && !isLoading?\n            <p>Reviews are missing</p>\n            :\n            <ul>\n                    {reviews.map((critic) => \n                    <li key={critic.id}>\n                            <h3>Author: {critic.author}</h3>\n                            <p>{critic.content}</p>\n                    </li>\n                )}\n            </ul>\n\n            }  \n            \n        </>\n    );\n\n}"],"names":["instancePathPoster","cap","axios","fetchMoviesTrendingOnDay","responce","data","results","fetchMovieByKeyWords","keyWord","currentKeyWord","toLowerCase","trim","params","query","fetchMovieDatails","id","fetchMovieCast","cast","fetchMovieReviews","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","Reviews","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","useParams","useEffect","getCast","length","map","critic","author","content"],"sourceRoot":""}
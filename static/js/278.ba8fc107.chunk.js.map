{"version":3,"file":"static/js/278.ba8fc107.chunk.js","mappings":"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","sources":["API/api.js","components/CastReviewSceleton/CastReviewSceleton.jsx","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\nexport const instancePathPoster = \"https://themoviedb.org/t/p/w1280\";\nexport const cap = \"https://netsh.pp.ua/wp-content/uploads/2017/08/Placeholder-1.png\"\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\nconst token = \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhYzViODgyYzJmYWZhYTc1M2EyYjFlNjFhZTMxYWZlMyIsInN1YiI6IjY0MThjMGNhNmEyMjI3MDBlOTc2NmYyOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.HpUKoGZIk3XOJnE1mgAPzzSJnPYgOT4_k3_XM1sQUtc\"\naxios.defaults.headers.common[\"Authorization\"] = token;\n\nexport const fetchMoviesTrendingOnDay = async () => {\n    const responce = await axios.get('/trending/movie/day')\n    return responce.data.results;\n}\nexport const fetchMovieByKeyWords = async (keyWord) => {\n    const currentKeyWord = keyWord.toLowerCase().trim();\n    const responce = await axios.get('/search/movie', {\n        params: {\n            query: currentKeyWord,\n        }\n    })\n    return responce.data.results;\n}\nexport const fetchMovieDatails = async (id) => {\n    const responce = await axios.get(`/movie/${id}`)\n    return responce.data;\n}\nexport const fetchMovieCast = async (id) => {\n    const responce = await axios.get(`/movie/${id}/credits`)\n    return responce.data.cast;\n}\nexport const fetchMovieReviews = async (id) => {\n    const responce = await axios.get(`/movie/${id}/reviews`)\n    return responce.data.results;\n}","import React from \"react\"\nimport ContentLoader from \"react-content-loader\"\n\nconst CastReviewSceleton = () => (\n  <ContentLoader \n    speed={2}\n    width={460}\n    height={460}\n    viewBox=\"0 0 460 460\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n\n  >\n    <rect x=\"6\" y=\"35\" rx=\"0\" ry=\"0\" width=\"140\" height=\"166\" /> \n    <rect x=\"10\" y=\"222\" rx=\"0\" ry=\"0\" width=\"363\" height=\"31\" /> \n    <rect x=\"10\" y=\"262\" rx=\"0\" ry=\"0\" width=\"363\" height=\"130\" />\n  </ContentLoader>\n)\n\nexport default CastReviewSceleton","import { Link,useLocation } from \"react-router-dom\";\n\nexport function MoviesList({ movies, addPath = \"\" }) {\n    const location = useLocation();\n    return (\n        <ul>\n            {movies.map((movie) => {\n                return (\n                    <li key = {movie.id}>\n                        <Link to={`${addPath+movie.id}`} state={{from:location}}>{movie.title} </Link>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n}","import { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchMovieByKeyWords } from \"../../API/api\";\nimport CastReviewSceleton from \"../../components/CastReviewSceleton/CastReviewSceleton\";\nexport default function Movies() {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const moviesName = searchParams.get(\"keyWord\") ?? \"\";\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (event.currentTarget.elements.film.value === \"\") return;\n        setSearchParams({ keyWord: event.currentTarget.elements.film.value });\n    }\n    useEffect(() => {\n        if (moviesName === \"\") return;\n        async function getMovies(moviesName) {\n            try {\n                setIsLoading(true);\n                const movies = await fetchMovieByKeyWords(moviesName);\n                setMovies(movies);\n            }\n            catch(error)  {\n                console.log(error);\n            }\n            finally {\n                setIsLoading(false);\n            }\n        }\n        getMovies(moviesName);\n    },[moviesName]);\n    return (\n        <main>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"film\"/>\n                <button type=\"submit\">Search</button>\n            </form>\n           {!isLoading&&<MoviesList movies={movies}></MoviesList>} \n           {isLoading&&<CastReviewSceleton></CastReviewSceleton>}\n        </main>\n    );\n}"],"names":["instancePathPoster","cap","axios","fetchMoviesTrendingOnDay","responce","data","results","fetchMovieByKeyWords","keyWord","currentKeyWord","toLowerCase","trim","params","query","fetchMovieDatails","id","fetchMovieCast","cast","fetchMovieReviews","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","MoviesList","movies","addPath","location","useLocation","map","movie","to","state","from","title","Movies","useState","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","moviesName","get","useEffect","console","log","getMovies","onSubmit","event","preventDefault","currentTarget","elements","film","value","type","name"],"sourceRoot":""}